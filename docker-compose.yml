version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: aisim-postgres
    environment:
      POSTGRES_DB: aisim_ads
      POSTGRES_USER: aisim
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - aisim-network

  redis:
    image: redis:7-alpine
    container_name: aisim-redis
    ports:
      - "6379:6379"
    networks:
      - aisim-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: aisim-backend
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://aisim:${DB_PASSWORD}@postgres:5432/aisim_ads
      REDIS_URL: redis://redis:6379
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_PUBLISHABLE_KEY: ${STRIPE_PUBLISHABLE_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      BRAVE_API_KEY: ${BRAVE_API_KEY}
      GOOGLE_API_KEY: ${GOOGLE_API_KEY}
      JWT_SECRET: ${JWT_SECRET}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      FRONTEND_URL: ${FRONTEND_URL}
      BACKEND_URL: ${BACKEND_URL}
    depends_on:
      - postgres
      - redis
    networks:
      - aisim-network
    volumes:
      - ./backend/src:/app/src

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: aisim-frontend
    ports:
      - "3001:3000"
    environment:
      NEXT_PUBLIC_API_URL: ${BACKEND_URL}
      NEXT_PUBLIC_STRIPE_KEY: ${STRIPE_PUBLISHABLE_KEY}
      NODE_ENV: production
    depends_on:
      - backend
    networks:
      - aisim-network

volumes:
  postgres_data:

networks:
  aisim-network:
    driver: bridge



